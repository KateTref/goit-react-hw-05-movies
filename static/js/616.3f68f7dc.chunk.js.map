{"version":3,"file":"static/js/616.3f68f7dc.chunk.js","mappings":"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","sources":["api.js","components/Loader.js","webpack://react-homework-template/./src/pages/MovieDetails.module.css?6cd2","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '768a976ba726350d854c210d487f9812';\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}&page=1`\n  );\n  return data.results.map(film => {\n    return {\n      id: film.id,\n      title: film.title,\n    };\n  });\n};\n\nexport const getDetails = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return {\n    image: data.poster_path,\n    title: data.title,\n    date: data.release_date,\n    score: data.vote_average,\n    overview: data.overview,\n    genres: data.genres,\n  };\n};\n\nexport const getCasts = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast.map(elem => {\n    return {\n      avatar: elem.profile_path,\n      name: elem.name,\n      character: elem.character,\n    };\n  });\n};\n// avatar: elem.profile_path,\n// name: elem.name,\n// character: elem.character,\n","import { Audio } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <Audio\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"green\"\n      ariaLabel=\"loading\"\n      wrapperStyle\n      wrapperClass\n    />\n  );\n};\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptionWrapper\":\"MovieDetails_descriptionWrapper__5fktp\"};","// import { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState, Suspense, useMemo } from 'react';\nimport { Outlet, useParams, Link } from 'react-router-dom';\nimport { getDetails } from 'api';\nimport css from './MovieDetails.module.css';\nimport Loader from 'components/Loader';\n\nexport default function MovieDetails() {\n  const [image, setImage] = useState('');\n  const [title, setTitle] = useState('');\n  const [date, setDate] = useState('');\n  const [score, setScore] = useState('');\n  const [overview, setOverview] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function getFilmDetails() {\n      try {\n        setIsLoading(true);\n        const { image, title, date, score, overview, genres } =\n          await getDetails(id);\n        setImage(image);\n        setTitle(title);\n        setDate(date.substr(0, 4));\n        setScore(String(Math.ceil(Number(score) * 10)));\n        setOverview(overview);\n        setGenres(genres);\n      } catch {\n        setError('Sorry, we can not get data.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getFilmDetails();\n  }, [id]);\n\n  const genresList = useMemo(() => {\n    const genreArray = [];\n    genres.map(genre => genreArray.push(genre.name));\n    return genreArray.join(', ');\n  }, [genres]);\n\n  return (\n    <>\n      <div className={css.descriptionWrapper}>\n        {error && <p>{error}</p>}\n        {isLoading && <Loader />}\n        <img\n          src={`https://image.tmdb.org/t/p/w300/${image}`}\n          alt={title}\n          width={240}\n        ></img>\n        <div>\n          <h1>{`${title} (${date})`}</h1>\n          <p>User Score: {score}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genresList}</p>\n        </div>\n      </div>\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviwes\">Reviwes</Link>\n        </li>\n      </ul>\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n"],"names":["API_KEY","getTrending","axios","data","results","map","film","id","title","getDetails","image","poster_path","date","release_date","score","vote_average","overview","genres","getCasts","cast","elem","avatar","profile_path","name","character","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClass","MovieDetails","useState","setImage","setTitle","setDate","setScore","setOverview","setGenres","error","setError","isLoading","setIsLoading","useParams","useEffect","substr","String","Math","ceil","Number","getFilmDetails","genresList","useMemo","genreArray","genre","push","join","className","css","Loader","src","alt","to","Suspense","fallback"],"sourceRoot":""}