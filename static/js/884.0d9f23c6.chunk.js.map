{"version":3,"file":"static/js/884.0d9f23c6.chunk.js","mappings":"qOACMA,EAAU,mCAEHC,EAAW,mCAAG,sGACFC,EAAAA,EAAAA,IAAA,mEACuCF,EADvC,YADE,uBACjBG,EADiB,EACjBA,KADiB,kBAIlBA,EAAKC,QAAQC,KAAI,SAAAC,GACtB,MAAO,CACLC,GAAID,EAAKC,GACTC,MAAOF,EAAKE,MAEf,KATwB,2CAAH,qDAaXC,EAAU,mCAAG,WAAMF,GAAN,yFACDL,EAAAA,EAAAA,IAAA,6CACiBK,EADjB,oBAC+BP,EAD/B,oBADC,uBAChBG,EADgB,EAChBA,KADgB,kBAIjB,CACLO,MAAOP,EAAKQ,YACZH,MAAOL,EAAKK,MACZI,KAAMT,EAAKU,aACXC,MAAOX,EAAKY,aACZC,SAAUb,EAAKa,SACfC,OAAQd,EAAKc,SAVS,2CAAH,qD,sICXR,SAASC,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOT,EAAP,KAAcU,EAAd,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOX,EAAP,KAAca,EAAd,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOP,EAAP,KAAaU,EAAb,KACA,GAA0BH,EAAAA,EAAAA,UAAS,IAAnC,eAAOL,EAAP,KAAcS,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOH,EAAP,KAAiBQ,EAAjB,KACA,GAA4BL,EAAAA,EAAAA,UAAS,IAArC,eAAOF,EAAP,KAAeQ,EAAf,KACA,GAA0BN,EAAAA,EAAAA,UAAS,IAAnC,eAAOO,EAAP,KAAcC,EAAd,KACQpB,GAAOqB,EAAAA,EAAAA,MAAPrB,GACRsB,QAAQC,IAAIvB,IACZwB,EAAAA,EAAAA,YAAU,WAAM,wCACd,0HAGYtB,EAAAA,EAAAA,GAAWF,GAHvB,gBAEYG,EAFZ,EAEYA,MAAOF,EAFnB,EAEmBA,MAAOI,EAF1B,EAE0BA,KAAME,EAFhC,EAEgCA,MAAOE,EAFvC,EAEuCA,SAAUC,EAFjD,EAEiDA,OAE7CG,EAASV,GACTW,EAASb,GACTc,EAAQV,GACRW,EAAST,GACTU,EAAYR,GACZS,EAAUR,GATd,kDAWIU,EAAS,+BAXb,2DADc,uBAAC,WAAD,wBAedK,EACD,GAAE,CAACzB,IACJsB,QAAQC,IAAItB,EAAOS,EAAQP,EAAOE,EAAME,EAAOE,EAAUU,EAE1D,C","sources":["api.js","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '768a976ba726350d854c210d487f9812';\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}&page=1`\n  );\n  return data.results.map(film => {\n    return {\n      id: film.id,\n      title: film.title,\n    };\n  });\n};\n\n// сделать запрос на фильм по id (ориентироваться на то, что написано в дз)\nexport const getDetails = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return {\n    image: data.poster_path,\n    title: data.title,\n    date: data.release_date,\n    score: data.vote_average,\n    overview: data.overview,\n    genres: data.genres,\n  };\n};\n","// import { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getDetails } from 'api';\n\nexport default function MovieDetails() {\n  const [image, setImage] = useState('');\n  const [title, setTitle] = useState('');\n  const [date, setDate] = useState('');\n  const [score, setScore] = useState('');\n  const [overview, setOverview] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [error, setError] = useState('');\n  const { id } = useParams();\n  console.log(id);\n  useEffect(() => {\n    async function getFilmDetails() {\n      try {\n        const { image, title, date, score, overview, genres } =\n          await getDetails(id);\n        setImage(image);\n        setTitle(title);\n        setDate(date);\n        setScore(score);\n        setOverview(overview);\n        setGenres(genres);\n      } catch {\n        setError('Sorry, we can not get data.');\n      }\n    }\n    getFilmDetails();\n  }, [id]);\n  console.log(title, genres, image, date, score, overview, error);\n  // console.log(title);\n}\n\n// const [searchParams] = useSearchParams();\n// console.log(searchParams);\n\n// const filmId = searchParams.get('id');\n\n// вызвать функцию получения данных по id фильма (из api), получить данные и отрендерить их\n"],"names":["API_KEY","getTrending","axios","data","results","map","film","id","title","getDetails","image","poster_path","date","release_date","score","vote_average","overview","genres","MovieDetails","useState","setImage","setTitle","setDate","setScore","setOverview","setGenres","error","setError","useParams","console","log","useEffect","getFilmDetails"],"sourceRoot":""}